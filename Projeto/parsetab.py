
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARROW ASSIGN BINARY_NUMBER BITWISE_AND BITWISE_AND_ASSIGN BITWISE_COMPLEMENT BITWISE_OR BITWISE_OR_ASSIGN BITWISE_SHIFT_LEFT BITWISE_SHIFT_RIGHT BITWISE_XOR BITWISE_XOR_ASSIGN CHARACTER COLON COMMA COMMENT DECREMENT DIVIDE DIVIDE_ASSIGN DOT EQUALS_THEN FLOAT_NUMBER GREATER_EQUALS GREATER_THEN HEXADECIMAL_NUMBER IDENTIFIER INCREMENT KEYWORD_AUTO KEYWORD_BREAK KEYWORD_CASE KEYWORD_CONST KEYWORD_CONTINUE KEYWORD_DEFAULT KEYWORD_DO KEYWORD_ELSE KEYWORD_ENUM KEYWORD_EXTERN KEYWORD_FOR KEYWORD_GOTO KEYWORD_IF KEYWORD_REGISTER KEYWORD_RETURN KEYWORD_SIGNED KEYWORD_SIZEOF KEYWORD_STATIC KEYWORD_STRUCT KEYWORD_SWITCH KEYWORD_TYPEDEF KEYWORD_UNION KEYWORD_UNSIGNED KEYWORD_VOLATILE KEYWORD_WHILE LBRACE LBRACKET LESS_EQUALS LESS_THEN LOGICAL_AND LOGICAL_OR LPAREN MINUS MINUS_ASSIGN MODULUS MODULUS_ASSIGN MULTILINE_COMMENT NOT NOT_EQUALS NUMBER OCTAL_NUMBER PLUS PLUS_ASSIGN PRE_PROCESSOR QUESTION_MARK RBRACE RBRACKET RPAREN SEMICOLON SHIFT_LEFT_ASSIGN SHIFT_RIGHT_ASSIGN STRING TIMES TIMES_ASSIGN TYPE_CHAR TYPE_DOUBLE TYPE_FLOAT TYPE_INT TYPE_LONG TYPE_SHORT TYPE_VOID\n        program : function_declaration program\n                | function program\n                | empty\n    \n        function_declaration : signature SEMICOLON\n    \n        command_block : LBRACE commands RBRACE\n                      | LBRACE RBRACE\n    \n        commands : command commands\n                | empty\n    \n        command : data_definition SEMICOLON\n    \n        function : signature command_block\n    \n        signature : type IDENTIFIER function_parameters\n                  | pointer IDENTIFIER function_parameters\n    \n        function_parameters : LPAREN parameters_list RPAREN\n    \n            parameters_list : data_definition COMMA parameters_list\n            | data_definition\n            | array_definition\n            | array_declaration\n            | empty\n    \n        array_declaration : type IDENTIFIER LBRACKET RBRACKET\n                          | pointer IDENTIFIER LBRACKET RBRACKET\n    \n        data_definition : type IDENTIFIER\n                        | pointer IDENTIFIER\n    \n        array_definition : static_array_definition\n                         | runtime_array_definition\n    \n        static_array_definition : type IDENTIFIER LBRACKET NUMBER RBRACKET\n                                | pointer IDENTIFIER LBRACKET NUMBER RBRACKET\n    \n         runtime_array_definition : type IDENTIFIER LBRACKET IDENTIFIER RBRACKET\n                                 | pointer IDENTIFIER LBRACKET IDENTIFIER RBRACKET\n    \n        type : TYPE_CHAR\n            |  TYPE_DOUBLE\n            |  TYPE_FLOAT\n            |  TYPE_INT\n            |  TYPE_LONG\n            |  TYPE_SHORT\n            |  TYPE_VOID\n    \n        pointer : type TIMES multiple_pointer\n    \n        multiple_pointer : TIMES multiple_pointer \n        | empty\n    empty : '
    
_lr_action_items = {'$end':([0,1,2,3,4,15,16,17,18,24,36,],[-39,0,-39,-39,-3,-1,-2,-4,-10,-6,-5,]),'TYPE_CHAR':([0,2,3,17,18,19,24,25,31,36,38,52,],[8,8,8,-4,-10,8,-6,8,8,-5,-9,8,]),'TYPE_DOUBLE':([0,2,3,17,18,19,24,25,31,36,38,52,],[9,9,9,-4,-10,9,-6,9,9,-5,-9,9,]),'TYPE_FLOAT':([0,2,3,17,18,19,24,25,31,36,38,52,],[10,10,10,-4,-10,10,-6,10,10,-5,-9,10,]),'TYPE_INT':([0,2,3,17,18,19,24,25,31,36,38,52,],[11,11,11,-4,-10,11,-6,11,11,-5,-9,11,]),'TYPE_LONG':([0,2,3,17,18,19,24,25,31,36,38,52,],[12,12,12,-4,-10,12,-6,12,12,-5,-9,12,]),'TYPE_SHORT':([0,2,3,17,18,19,24,25,31,36,38,52,],[13,13,13,-4,-10,13,-6,13,13,-5,-9,13,]),'TYPE_VOID':([0,2,3,17,18,19,24,25,31,36,38,52,],[14,14,14,-4,-10,14,-6,14,14,-5,-9,14,]),'SEMICOLON':([5,27,30,35,39,40,51,],[17,38,-11,-12,-21,-22,-13,]),'LBRACE':([5,30,35,51,],[19,-11,-12,-13,]),'IDENTIFIER':([6,7,8,9,10,11,12,13,14,21,28,29,32,33,34,46,47,50,56,57,],[20,22,-29,-30,-31,-32,-33,-34,-35,-39,39,40,-39,-36,-38,53,54,-37,58,61,]),'TIMES':([6,8,9,10,11,12,13,14,21,28,32,46,],[21,-29,-30,-31,-32,-33,-34,-35,32,21,32,21,]),'RBRACE':([19,23,25,26,37,38,],[24,36,-39,-8,-7,-9,]),'LPAREN':([20,22,],[31,31,]),'RPAREN':([31,41,42,43,44,45,48,49,52,53,54,55,59,62,64,65,66,67,],[-39,51,-15,-16,-17,-18,-23,-24,-39,-21,-22,-14,-19,-20,-27,-25,-28,-26,]),'COMMA':([42,53,54,],[52,-21,-22,]),'LBRACKET':([53,54,],[56,57,]),'RBRACKET':([56,57,58,60,61,63,],[59,62,64,65,66,67,]),'NUMBER':([56,57,],[60,63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,15,16,]),'function_declaration':([0,2,3,],[2,2,2,]),'function':([0,2,3,],[3,3,3,]),'empty':([0,2,3,19,21,25,31,32,52,],[4,4,4,26,34,26,45,34,45,]),'signature':([0,2,3,],[5,5,5,]),'type':([0,2,3,19,25,31,52,],[6,6,6,28,28,46,46,]),'pointer':([0,2,3,19,25,31,52,],[7,7,7,29,29,47,47,]),'command_block':([5,],[18,]),'commands':([19,25,],[23,37,]),'command':([19,25,],[25,25,]),'data_definition':([19,25,31,52,],[27,27,42,42,]),'function_parameters':([20,22,],[30,35,]),'multiple_pointer':([21,32,],[33,50,]),'parameters_list':([31,52,],[41,55,]),'array_definition':([31,52,],[43,43,]),'array_declaration':([31,52,],[44,44,]),'static_array_definition':([31,52,],[48,48,]),'runtime_array_definition':([31,52,],[49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_declaration program','program',2,'p_program','sintatic.py',7),
  ('program -> function program','program',2,'p_program','sintatic.py',8),
  ('program -> empty','program',1,'p_program','sintatic.py',9),
  ('function_declaration -> signature SEMICOLON','function_declaration',2,'p_function_declaration','sintatic.py',15),
  ('command_block -> LBRACE commands RBRACE','command_block',3,'p_command_block','sintatic.py',21),
  ('command_block -> LBRACE RBRACE','command_block',2,'p_command_block','sintatic.py',22),
  ('commands -> command commands','commands',2,'p_commands','sintatic.py',28),
  ('commands -> empty','commands',1,'p_commands','sintatic.py',29),
  ('command -> data_definition SEMICOLON','command',2,'p_command','sintatic.py',34),
  ('function -> signature command_block','function',2,'p_function','sintatic.py',39),
  ('signature -> type IDENTIFIER function_parameters','signature',3,'p_signature','sintatic.py',45),
  ('signature -> pointer IDENTIFIER function_parameters','signature',3,'p_signature','sintatic.py',46),
  ('function_parameters -> LPAREN parameters_list RPAREN','function_parameters',3,'p_function_parameters','sintatic.py',52),
  ('parameters_list -> data_definition COMMA parameters_list','parameters_list',3,'p_parameters_list','sintatic.py',58),
  ('parameters_list -> data_definition','parameters_list',1,'p_parameters_list','sintatic.py',59),
  ('parameters_list -> array_definition','parameters_list',1,'p_parameters_list','sintatic.py',60),
  ('parameters_list -> array_declaration','parameters_list',1,'p_parameters_list','sintatic.py',61),
  ('parameters_list -> empty','parameters_list',1,'p_parameters_list','sintatic.py',62),
  ('array_declaration -> type IDENTIFIER LBRACKET RBRACKET','array_declaration',4,'p_array_declaration','sintatic.py',68),
  ('array_declaration -> pointer IDENTIFIER LBRACKET RBRACKET','array_declaration',4,'p_array_declaration','sintatic.py',69),
  ('data_definition -> type IDENTIFIER','data_definition',2,'p_data_definition','sintatic.py',75),
  ('data_definition -> pointer IDENTIFIER','data_definition',2,'p_data_definition','sintatic.py',76),
  ('array_definition -> static_array_definition','array_definition',1,'p_array_definition','sintatic.py',82),
  ('array_definition -> runtime_array_definition','array_definition',1,'p_array_definition','sintatic.py',83),
  ('static_array_definition -> type IDENTIFIER LBRACKET NUMBER RBRACKET','static_array_definition',5,'p_static_array_definition','sintatic.py',89),
  ('static_array_definition -> pointer IDENTIFIER LBRACKET NUMBER RBRACKET','static_array_definition',5,'p_static_array_definition','sintatic.py',90),
  ('runtime_array_definition -> type IDENTIFIER LBRACKET IDENTIFIER RBRACKET','runtime_array_definition',5,'p_runtime_array_definition','sintatic.py',96),
  ('runtime_array_definition -> pointer IDENTIFIER LBRACKET IDENTIFIER RBRACKET','runtime_array_definition',5,'p_runtime_array_definition','sintatic.py',97),
  ('type -> TYPE_CHAR','type',1,'p_type','sintatic.py',103),
  ('type -> TYPE_DOUBLE','type',1,'p_type','sintatic.py',104),
  ('type -> TYPE_FLOAT','type',1,'p_type','sintatic.py',105),
  ('type -> TYPE_INT','type',1,'p_type','sintatic.py',106),
  ('type -> TYPE_LONG','type',1,'p_type','sintatic.py',107),
  ('type -> TYPE_SHORT','type',1,'p_type','sintatic.py',108),
  ('type -> TYPE_VOID','type',1,'p_type','sintatic.py',109),
  ('pointer -> type TIMES multiple_pointer','pointer',3,'p_pointer','sintatic.py',115),
  ('multiple_pointer -> TIMES multiple_pointer','multiple_pointer',2,'p_multiple_pointer','sintatic.py',121),
  ('multiple_pointer -> empty','multiple_pointer',1,'p_multiple_pointer','sintatic.py',122),
  ('empty -> <empty>','empty',0,'p_empty','sintatic.py',127),
]
