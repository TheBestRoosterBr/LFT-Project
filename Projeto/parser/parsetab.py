
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARROW ASSIGN BINARY_NUMBER BITWISE_AND BITWISE_AND_ASSIGN BITWISE_COMPLEMENT BITWISE_OR BITWISE_OR_ASSIGN BITWISE_SHIFT_LEFT BITWISE_SHIFT_RIGHT BITWISE_XOR BITWISE_XOR_ASSIGN CHARACTER COLON COMMA COMMENT DECREMENT DIVIDE DIVIDE_ASSIGN DOT EQUALS_THEN FLOAT_NUMBER GREATER_EQUALS GREATER_THEN HEXADECIMAL_NUMBER IDENTIFIER INCREMENT KEYWORD_AUTO KEYWORD_BREAK KEYWORD_CASE KEYWORD_CONST KEYWORD_CONTINUE KEYWORD_DEFAULT KEYWORD_DO KEYWORD_ELSE KEYWORD_ENUM KEYWORD_EXTERN KEYWORD_FOR KEYWORD_GOTO KEYWORD_IF KEYWORD_REGISTER KEYWORD_RETURN KEYWORD_SIGNED KEYWORD_SIZEOF KEYWORD_STATIC KEYWORD_STRUCT KEYWORD_SWITCH KEYWORD_TYPEDEF KEYWORD_UNION KEYWORD_UNSIGNED KEYWORD_VOLATILE KEYWORD_WHILE LBRACE LBRACKET LESS_EQUALS LESS_THEN LOGICAL_AND LOGICAL_OR LPAREN MINUS MINUS_ASSIGN MODULUS MODULUS_ASSIGN MULTILINE_COMMENT NOT NOT_EQUALS NUMBER OCTAL_NUMBER PLUS PLUS_ASSIGN PRE_PROCESSOR QUESTION_MARK RBRACE RBRACKET RPAREN SEMICOLON SHIFT_LEFT_ASSIGN SHIFT_RIGHT_ASSIGN STRING TIMES TIMES_ASSIGN TYPE_CHAR TYPE_DOUBLE TYPE_FLOAT TYPE_INT TYPE_LONG TYPE_SHORT TYPE_VOID\n        program : function_declaration program\n                | function program\n                |\n    \n        function_declaration : signature SEMICOLON\n    \n        command_block : LBRACE commands RBRACE\n                        | LBRACE RBRACE\n    \n        commands : command commands\n                | command\n    \n        command : data_definition SEMICOLON\n                | while_loop\n                | assign SEMICOLON\n                | define_and_assign SEMICOLON\n                | expression SEMICOLON\n                | command_block\n                | SEMICOLON\n                | array_definition SEMICOLON\n    \n        expression : expression expression2\n                    | NOT expression\n                    | expression2\n    \n        while_signature : KEYWORD_WHILE LPAREN expression RPAREN\n    \n        while_loop : while_signature command_block\n                    | while_signature command\n    \n        assign : IDENTIFIER ASSIGN expression\n    \n        define_and_assign : type assign\n                         | pointer assign\n    \n        expression2 : LOGICAL_AND expression\n                    | LOGICAL_OR expression\n                    | PLUS expression\n                    | MINUS expression\n                    | TIMES expression\n                    | DIVIDE expression\n                    | MODULUS expression\n                    | EQUALS_THEN expression\n                    | NOT_EQUALS expression\n                    | GREATER_THEN expression\n                    | LESS_THEN expression\n                    | LESS_EQUALS expression\n                    | GREATER_EQUALS expression\n                    | LPAREN expression RPAREN\n                    | expression\n                    | IDENTIFIER\n                    | number\n                    | STRING\n                    | CHARACTER\n                    | assign\n                    | define_and_assign\n\n\n    \n        number : NUMBER\n                | FLOAT_NUMBER\n                | BINARY_NUMBER\n                | HEXADECIMAL_NUMBER\n                | OCTAL_NUMBER\n    \n        function : signature command_block\n    \n        signature : type IDENTIFIER function_parameters\n                  | pointer IDENTIFIER function_parameters\n    \n        function_parameters : LPAREN parameters_list RPAREN\n                            | LPAREN RPAREN\n    \n            parameters_list : data_definition COMMA parameters_list\n            | data_definition\n            | array_definition COMMA parameters_list\n            | array_definition\n            | array_declaration COMMA parameters_list\n            | array_declaration\n    \n        array_declaration : type IDENTIFIER LBRACKET RBRACKET\n                          | pointer IDENTIFIER LBRACKET RBRACKET\n    \n        data_definition : type IDENTIFIER\n                        | pointer IDENTIFIER\n    \n        array_definition : static_array_definition\n                         | runtime_array_definition\n    \n        static_array_definition : type IDENTIFIER LBRACKET NUMBER RBRACKET\n                                | pointer IDENTIFIER LBRACKET NUMBER RBRACKET\n    \n         runtime_array_definition : type IDENTIFIER LBRACKET IDENTIFIER RBRACKET\n                                 | pointer IDENTIFIER LBRACKET IDENTIFIER RBRACKET\n    \n        type : primitive_types\n             | user_types\n    \n        primitive_types : TYPE_CHAR\n            |  TYPE_DOUBLE\n            |  TYPE_FLOAT\n            |  TYPE_INT\n            |  TYPE_LONG\n            |  TYPE_SHORT\n            |  TYPE_VOID\n    \n        user_types : IDENTIFIER\n                    | KEYWORD_STRUCT IDENTIFIER\n    \n        pointer : type TIMES multiple_pointer\n                | type TIMES\n    \n        multiple_pointer : TIMES multiple_pointer\n                         | TIMES\n    '
    
_lr_action_items = {'$end':([0,1,2,3,18,19,20,21,28,74,],[-3,0,-3,-3,-1,-2,-4,-52,-6,-5,]),'TYPE_CHAR':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,126,127,128,135,],[10,10,10,-4,-52,10,-6,10,-15,-10,-45,-46,10,-14,-41,10,-19,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-42,-43,-44,-47,-48,-49,-50,-51,10,-5,-9,-11,-12,10,-13,-17,-41,-45,-46,-16,-24,10,-25,-14,-22,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-39,10,10,10,-20,]),'TYPE_DOUBLE':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,126,127,128,135,],[11,11,11,-4,-52,11,-6,11,-15,-10,-45,-46,11,-14,-41,11,-19,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-42,-43,-44,-47,-48,-49,-50,-51,11,-5,-9,-11,-12,11,-13,-17,-41,-45,-46,-16,-24,11,-25,-14,-22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-39,11,11,11,-20,]),'TYPE_FLOAT':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,126,127,128,135,],[12,12,12,-4,-52,12,-6,12,-15,-10,-45,-46,12,-14,-41,12,-19,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-42,-43,-44,-47,-48,-49,-50,-51,12,-5,-9,-11,-12,12,-13,-17,-41,-45,-46,-16,-24,12,-25,-14,-22,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-39,12,12,12,-20,]),'TYPE_INT':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,126,127,128,135,],[13,13,13,-4,-52,13,-6,13,-15,-10,-45,-46,13,-14,-41,13,-19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-42,-43,-44,-47,-48,-49,-50,-51,13,-5,-9,-11,-12,13,-13,-17,-41,-45,-46,-16,-24,13,-25,-14,-22,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-39,13,13,13,-20,]),'TYPE_LONG':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,126,127,128,135,],[14,14,14,-4,-52,14,-6,14,-15,-10,-45,-46,14,-14,-41,14,-19,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-42,-43,-44,-47,-48,-49,-50,-51,14,-5,-9,-11,-12,14,-13,-17,-41,-45,-46,-16,-24,14,-25,-14,-22,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-39,14,14,14,-20,]),'TYPE_SHORT':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,126,127,128,135,],[15,15,15,-4,-52,15,-6,15,-15,-10,-45,-46,15,-14,-41,15,-19,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-42,-43,-44,-47,-48,-49,-50,-51,15,-5,-9,-11,-12,15,-13,-17,-41,-45,-46,-16,-24,15,-25,-14,-22,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-39,15,15,15,-20,]),'TYPE_VOID':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,126,127,128,135,],[16,16,16,-4,-52,16,-6,16,-15,-10,-45,-46,16,-14,-41,16,-19,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-42,-43,-44,-47,-48,-49,-50,-51,16,-5,-9,-11,-12,16,-13,-17,-41,-45,-46,-16,-24,16,-25,-14,-22,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-39,16,16,16,-20,]),'IDENTIFIER':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,26,28,29,31,32,33,34,35,36,38,39,40,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,120,121,122,123,124,126,127,128,135,139,140,],[6,6,6,23,-82,25,-73,-74,-75,-76,-77,-78,-79,-80,-81,26,-4,-52,39,-85,-83,-6,39,-15,-10,-45,-46,82,-14,88,-41,91,39,-19,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-42,-43,-44,-47,-48,-49,-50,-51,6,-87,-84,-5,-9,-11,-12,82,-13,-17,-41,-45,-46,119,119,-16,-24,82,-25,-14,-22,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,129,130,-86,131,82,133,82,-39,6,6,6,-20,131,133,]),'KEYWORD_STRUCT':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,126,127,128,135,],[17,17,17,-4,-52,17,-6,17,-15,-10,-45,-46,17,-14,-41,17,-19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-42,-43,-44,-47,-48,-49,-50,-51,17,-5,-9,-11,-12,17,-13,-17,-41,-45,-46,-16,-24,17,-25,-14,-22,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-39,17,17,17,-20,]),'SEMICOLON':([4,22,28,29,30,31,32,33,34,35,36,37,39,41,42,44,45,61,62,63,64,65,66,67,68,69,73,74,76,77,78,79,80,81,82,83,84,87,88,89,91,92,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,112,121,124,125,135,141,142,143,144,],[20,31,-6,31,76,-15,-10,77,78,80,-14,87,-41,31,-19,-67,-68,-42,-43,-44,-47,-48,-49,-50,-51,-53,-54,-5,-9,-11,-12,-40,-13,-17,-41,-45,-46,-16,-65,-24,-66,-25,-14,-22,-18,-30,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-56,-23,-39,-55,-20,-71,-69,-72,-70,]),'LBRACE':([4,22,28,29,31,32,36,41,69,73,74,76,77,78,80,87,93,94,112,125,135,],[22,22,-6,22,-15,-10,-14,22,-53,-54,-5,-9,-11,-12,-13,-16,-14,-22,-56,-55,-20,]),'TIMES':([5,6,8,9,10,11,12,13,14,15,16,22,24,26,28,29,31,32,33,34,35,36,38,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,74,76,77,78,79,80,81,82,83,84,85,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,121,123,124,135,],[24,-82,-73,-74,-75,-76,-77,-78,-79,-80,-81,46,71,-83,-6,46,-15,-10,-45,-46,46,-14,24,-41,46,-19,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-42,-43,-44,-47,-48,-49,-50,-51,71,-5,-9,-11,-12,46,-13,-17,-41,-45,-46,24,-16,-24,46,-25,-14,-22,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,24,46,46,-39,-20,]),'RBRACE':([22,27,28,29,31,32,36,74,75,76,77,78,80,87,93,94,],[28,74,-6,-8,-15,-10,-14,-5,-7,-9,-11,-12,-13,-16,-14,-22,]),'NOT':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[43,-6,43,-15,-10,-45,-46,43,-14,-41,43,-19,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,43,-13,-17,-41,-45,-46,-16,-24,43,-25,-14,-22,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-39,-20,]),'KEYWORD_WHILE':([22,28,29,31,32,36,41,74,76,77,78,80,87,93,94,135,],[47,-6,47,-15,-10,-14,47,-5,-9,-11,-12,-13,-16,-14,-22,-20,]),'LOGICAL_AND':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[49,-6,49,-15,-10,-45,-46,49,-14,-41,49,-19,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,49,-13,-17,-41,-45,-46,-16,-24,49,-25,-14,-22,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-39,-20,]),'LOGICAL_OR':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[50,-6,50,-15,-10,-45,-46,50,-14,-41,50,-19,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,50,-13,-17,-41,-45,-46,-16,-24,50,-25,-14,-22,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-39,-20,]),'PLUS':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[51,-6,51,-15,-10,-45,-46,51,-14,-41,51,-19,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,51,-13,-17,-41,-45,-46,-16,-24,51,-25,-14,-22,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-39,-20,]),'MINUS':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[52,-6,52,-15,-10,-45,-46,52,-14,-41,52,-19,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,52,-13,-17,-41,-45,-46,-16,-24,52,-25,-14,-22,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-39,-20,]),'DIVIDE':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[53,-6,53,-15,-10,-45,-46,53,-14,-41,53,-19,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,53,-13,-17,-41,-45,-46,-16,-24,53,-25,-14,-22,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-39,-20,]),'MODULUS':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[54,-6,54,-15,-10,-45,-46,54,-14,-41,54,-19,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,54,-13,-17,-41,-45,-46,-16,-24,54,-25,-14,-22,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-39,-20,]),'EQUALS_THEN':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[55,-6,55,-15,-10,-45,-46,55,-14,-41,55,-19,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,55,-13,-17,-41,-45,-46,-16,-24,55,-25,-14,-22,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-39,-20,]),'NOT_EQUALS':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[56,-6,56,-15,-10,-45,-46,56,-14,-41,56,-19,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,56,-13,-17,-41,-45,-46,-16,-24,56,-25,-14,-22,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-39,-20,]),'GREATER_THEN':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[57,-6,57,-15,-10,-45,-46,57,-14,-41,57,-19,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,57,-13,-17,-41,-45,-46,-16,-24,57,-25,-14,-22,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-39,-20,]),'LESS_THEN':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[58,-6,58,-15,-10,-45,-46,58,-14,-41,58,-19,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,58,-13,-17,-41,-45,-46,-16,-24,58,-25,-14,-22,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-39,-20,]),'LESS_EQUALS':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[59,-6,59,-15,-10,-45,-46,59,-14,-41,59,-19,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,59,-13,-17,-41,-45,-46,-16,-24,59,-25,-14,-22,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-39,-20,]),'GREATER_EQUALS':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[60,-6,60,-15,-10,-45,-46,60,-14,-41,60,-19,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,60,-13,-17,-41,-45,-46,-16,-24,60,-25,-14,-22,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-39,-20,]),'LPAREN':([22,23,25,28,29,31,32,33,34,35,36,39,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[48,70,70,-6,48,-15,-10,-45,-46,48,-14,-41,48,-19,48,48,97,48,48,48,48,48,48,48,48,48,48,48,48,48,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,48,-13,-17,-41,-45,-46,-16,-24,48,-25,-14,-22,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-39,-20,]),'STRING':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[62,-6,62,-15,-10,-45,-46,62,-14,-41,62,-19,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,62,-13,-17,-41,-45,-46,-16,-24,62,-25,-14,-22,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-39,-20,]),'CHARACTER':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[63,-6,63,-15,-10,-45,-46,63,-14,-41,63,-19,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,63,-13,-17,-41,-45,-46,-16,-24,63,-25,-14,-22,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-39,-20,]),'NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,120,121,122,123,124,135,139,140,],[64,-6,64,-15,-10,-45,-46,64,-14,-41,64,-19,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,64,-13,-17,-41,-45,-46,-16,-24,64,-25,-14,-22,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,132,64,134,64,-39,-20,132,134,]),'FLOAT_NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[65,-6,65,-15,-10,-45,-46,65,-14,-41,65,-19,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,65,-13,-17,-41,-45,-46,-16,-24,65,-25,-14,-22,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-39,-20,]),'BINARY_NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[66,-6,66,-15,-10,-45,-46,66,-14,-41,66,-19,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,66,-13,-17,-41,-45,-46,-16,-24,66,-25,-14,-22,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-39,-20,]),'HEXADECIMAL_NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[67,-6,67,-15,-10,-45,-46,67,-14,-41,67,-19,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,67,-13,-17,-41,-45,-46,-16,-24,67,-25,-14,-22,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-39,-20,]),'OCTAL_NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,76,77,78,79,80,81,82,83,84,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,124,135,],[68,-6,68,-15,-10,-45,-46,68,-14,-41,68,-19,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-42,-43,-44,-47,-48,-49,-50,-51,-5,-9,-11,-12,68,-13,-17,-41,-45,-46,-16,-24,68,-25,-14,-22,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-39,-20,]),'ASSIGN':([39,82,88,91,119,],[90,90,90,90,90,]),'RPAREN':([42,44,45,61,62,63,64,65,66,67,68,70,79,81,82,83,84,89,92,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,121,123,124,129,130,136,137,138,141,142,143,144,145,146,],[-19,-67,-68,-42,-43,-44,-47,-48,-49,-50,-51,112,-40,-17,-41,-45,-46,-24,-25,-18,-30,124,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,125,-58,-60,-62,-23,135,-39,-65,-66,-57,-59,-61,-71,-69,-72,-70,-63,-64,]),'COMMA':([44,45,113,114,115,129,130,141,142,143,144,145,146,],[-67,-68,126,127,128,-65,-66,-71,-69,-72,-70,-63,-64,]),'LBRACKET':([88,91,129,130,],[120,122,139,140,]),'RBRACKET':([131,132,133,134,139,140,],[141,142,143,144,145,146,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,18,19,]),'function_declaration':([0,2,3,],[2,2,2,]),'function':([0,2,3,],[3,3,3,]),'signature':([0,2,3,],[4,4,4,]),'type':([0,2,3,22,29,35,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,70,79,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,126,127,128,],[5,5,5,38,38,85,38,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,116,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,116,116,116,]),'pointer':([0,2,3,22,29,35,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,70,79,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,126,127,128,],[7,7,7,40,40,86,40,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,117,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,117,117,117,]),'primitive_types':([0,2,3,22,29,35,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,70,79,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,126,127,128,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'user_types':([0,2,3,22,29,35,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,70,79,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,126,127,128,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'command_block':([4,22,29,41,],[21,36,36,93,]),'commands':([22,29,],[27,75,]),'command':([22,29,41,],[29,29,94,]),'data_definition':([22,29,41,70,126,127,128,],[30,30,30,113,113,113,113,]),'while_loop':([22,29,41,],[32,32,32,]),'assign':([22,29,35,38,40,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,79,85,86,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,],[33,33,83,89,92,33,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,89,92,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'define_and_assign':([22,29,35,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,79,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,],[34,34,84,34,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'expression':([22,29,35,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,79,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,],[35,35,79,35,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,79,121,79,79,123,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'array_definition':([22,29,41,70,126,127,128,],[37,37,37,114,114,114,114,]),'while_signature':([22,29,41,],[41,41,41,]),'expression2':([22,29,35,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,79,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,],[42,42,81,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,81,42,81,81,42,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'static_array_definition':([22,29,41,70,126,127,128,],[44,44,44,44,44,44,44,]),'runtime_array_definition':([22,29,41,70,126,127,128,],[45,45,45,45,45,45,45,]),'number':([22,29,35,41,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,79,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,121,123,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'function_parameters':([23,25,],[69,73,]),'multiple_pointer':([24,71,],[72,118,]),'parameters_list':([70,126,127,128,],[111,136,137,138,]),'array_declaration':([70,126,127,128,],[115,115,115,115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_declaration program','program',2,'p_program','sintatic.py',8),
  ('program -> function program','program',2,'p_program','sintatic.py',9),
  ('program -> <empty>','program',0,'p_program','sintatic.py',10),
  ('function_declaration -> signature SEMICOLON','function_declaration',2,'p_function_declaration','sintatic.py',16),
  ('command_block -> LBRACE commands RBRACE','command_block',3,'p_command_block','sintatic.py',22),
  ('command_block -> LBRACE RBRACE','command_block',2,'p_command_block','sintatic.py',23),
  ('commands -> command commands','commands',2,'p_commands','sintatic.py',29),
  ('commands -> command','commands',1,'p_commands','sintatic.py',30),
  ('command -> data_definition SEMICOLON','command',2,'p_command','sintatic.py',36),
  ('command -> while_loop','command',1,'p_command','sintatic.py',37),
  ('command -> assign SEMICOLON','command',2,'p_command','sintatic.py',38),
  ('command -> define_and_assign SEMICOLON','command',2,'p_command','sintatic.py',39),
  ('command -> expression SEMICOLON','command',2,'p_command','sintatic.py',40),
  ('command -> command_block','command',1,'p_command','sintatic.py',41),
  ('command -> SEMICOLON','command',1,'p_command','sintatic.py',42),
  ('command -> array_definition SEMICOLON','command',2,'p_command','sintatic.py',43),
  ('expression -> expression expression2','expression',2,'p_expression','expressions.py',48),
  ('expression -> NOT expression','expression',2,'p_expression','expressions.py',49),
  ('expression -> expression2','expression',1,'p_expression','expressions.py',50),
  ('while_signature -> KEYWORD_WHILE LPAREN expression RPAREN','while_signature',4,'p_while_signature','sintatic.py',49),
  ('while_loop -> while_signature command_block','while_loop',2,'p_while_loop','sintatic.py',55),
  ('while_loop -> while_signature command','while_loop',2,'p_while_loop','sintatic.py',56),
  ('assign -> IDENTIFIER ASSIGN expression','assign',3,'p_assign','sintatic.py',62),
  ('define_and_assign -> type assign','define_and_assign',2,'p_define_and_assign','sintatic.py',96),
  ('define_and_assign -> pointer assign','define_and_assign',2,'p_define_and_assign','sintatic.py',97),
  ('expression2 -> LOGICAL_AND expression','expression2',2,'p_expression2','sintatic.py',103),
  ('expression2 -> LOGICAL_OR expression','expression2',2,'p_expression2','sintatic.py',104),
  ('expression2 -> PLUS expression','expression2',2,'p_expression2','sintatic.py',105),
  ('expression2 -> MINUS expression','expression2',2,'p_expression2','sintatic.py',106),
  ('expression2 -> TIMES expression','expression2',2,'p_expression2','sintatic.py',107),
  ('expression2 -> DIVIDE expression','expression2',2,'p_expression2','sintatic.py',108),
  ('expression2 -> MODULUS expression','expression2',2,'p_expression2','sintatic.py',109),
  ('expression2 -> EQUALS_THEN expression','expression2',2,'p_expression2','sintatic.py',110),
  ('expression2 -> NOT_EQUALS expression','expression2',2,'p_expression2','sintatic.py',111),
  ('expression2 -> GREATER_THEN expression','expression2',2,'p_expression2','sintatic.py',112),
  ('expression2 -> LESS_THEN expression','expression2',2,'p_expression2','sintatic.py',113),
  ('expression2 -> LESS_EQUALS expression','expression2',2,'p_expression2','sintatic.py',114),
  ('expression2 -> GREATER_EQUALS expression','expression2',2,'p_expression2','sintatic.py',115),
  ('expression2 -> LPAREN expression RPAREN','expression2',3,'p_expression2','sintatic.py',116),
  ('expression2 -> expression','expression2',1,'p_expression2','sintatic.py',117),
  ('expression2 -> IDENTIFIER','expression2',1,'p_expression2','sintatic.py',118),
  ('expression2 -> number','expression2',1,'p_expression2','sintatic.py',119),
  ('expression2 -> STRING','expression2',1,'p_expression2','sintatic.py',120),
  ('expression2 -> CHARACTER','expression2',1,'p_expression2','sintatic.py',121),
  ('expression2 -> assign','expression2',1,'p_expression2','sintatic.py',122),
  ('expression2 -> define_and_assign','expression2',1,'p_expression2','sintatic.py',123),
  ('number -> NUMBER','number',1,'p_number','sintatic.py',131),
  ('number -> FLOAT_NUMBER','number',1,'p_number','sintatic.py',132),
  ('number -> BINARY_NUMBER','number',1,'p_number','sintatic.py',133),
  ('number -> HEXADECIMAL_NUMBER','number',1,'p_number','sintatic.py',134),
  ('number -> OCTAL_NUMBER','number',1,'p_number','sintatic.py',135),
  ('function -> signature command_block','function',2,'p_function','sintatic.py',141),
  ('signature -> type IDENTIFIER function_parameters','signature',3,'p_signature','sintatic.py',147),
  ('signature -> pointer IDENTIFIER function_parameters','signature',3,'p_signature','sintatic.py',148),
  ('function_parameters -> LPAREN parameters_list RPAREN','function_parameters',3,'p_function_parameters','sintatic.py',154),
  ('function_parameters -> LPAREN RPAREN','function_parameters',2,'p_function_parameters','sintatic.py',155),
  ('parameters_list -> data_definition COMMA parameters_list','parameters_list',3,'p_parameters_list','sintatic.py',161),
  ('parameters_list -> data_definition','parameters_list',1,'p_parameters_list','sintatic.py',162),
  ('parameters_list -> array_definition COMMA parameters_list','parameters_list',3,'p_parameters_list','sintatic.py',163),
  ('parameters_list -> array_definition','parameters_list',1,'p_parameters_list','sintatic.py',164),
  ('parameters_list -> array_declaration COMMA parameters_list','parameters_list',3,'p_parameters_list','sintatic.py',165),
  ('parameters_list -> array_declaration','parameters_list',1,'p_parameters_list','sintatic.py',166),
  ('array_declaration -> type IDENTIFIER LBRACKET RBRACKET','array_declaration',4,'p_array_declaration','sintatic.py',172),
  ('array_declaration -> pointer IDENTIFIER LBRACKET RBRACKET','array_declaration',4,'p_array_declaration','sintatic.py',173),
  ('data_definition -> type IDENTIFIER','data_definition',2,'p_data_definition','sintatic.py',179),
  ('data_definition -> pointer IDENTIFIER','data_definition',2,'p_data_definition','sintatic.py',180),
  ('array_definition -> static_array_definition','array_definition',1,'p_array_definition','sintatic.py',186),
  ('array_definition -> runtime_array_definition','array_definition',1,'p_array_definition','sintatic.py',187),
  ('static_array_definition -> type IDENTIFIER LBRACKET NUMBER RBRACKET','static_array_definition',5,'p_static_array_definition','sintatic.py',193),
  ('static_array_definition -> pointer IDENTIFIER LBRACKET NUMBER RBRACKET','static_array_definition',5,'p_static_array_definition','sintatic.py',194),
  ('runtime_array_definition -> type IDENTIFIER LBRACKET IDENTIFIER RBRACKET','runtime_array_definition',5,'p_runtime_array_definition','sintatic.py',200),
  ('runtime_array_definition -> pointer IDENTIFIER LBRACKET IDENTIFIER RBRACKET','runtime_array_definition',5,'p_runtime_array_definition','sintatic.py',201),
  ('type -> primitive_types','type',1,'p_type','sintatic.py',207),
  ('type -> user_types','type',1,'p_type','sintatic.py',208),
  ('primitive_types -> TYPE_CHAR','primitive_types',1,'p_primitive_types','sintatic.py',214),
  ('primitive_types -> TYPE_DOUBLE','primitive_types',1,'p_primitive_types','sintatic.py',215),
  ('primitive_types -> TYPE_FLOAT','primitive_types',1,'p_primitive_types','sintatic.py',216),
  ('primitive_types -> TYPE_INT','primitive_types',1,'p_primitive_types','sintatic.py',217),
  ('primitive_types -> TYPE_LONG','primitive_types',1,'p_primitive_types','sintatic.py',218),
  ('primitive_types -> TYPE_SHORT','primitive_types',1,'p_primitive_types','sintatic.py',219),
  ('primitive_types -> TYPE_VOID','primitive_types',1,'p_primitive_types','sintatic.py',220),
  ('user_types -> IDENTIFIER','user_types',1,'p_user_types','sintatic.py',226),
  ('user_types -> KEYWORD_STRUCT IDENTIFIER','user_types',2,'p_user_types','sintatic.py',227),
  ('pointer -> type TIMES multiple_pointer','pointer',3,'p_pointer','sintatic.py',233),
  ('pointer -> type TIMES','pointer',2,'p_pointer','sintatic.py',234),
  ('multiple_pointer -> TIMES multiple_pointer','multiple_pointer',2,'p_multiple_pointer','sintatic.py',240),
  ('multiple_pointer -> TIMES','multiple_pointer',1,'p_multiple_pointer','sintatic.py',241),
]
