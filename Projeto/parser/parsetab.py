
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARROW ASSIGN BINARY_NUMBER BITWISE_AND BITWISE_AND_ASSIGN BITWISE_COMPLEMENT BITWISE_OR BITWISE_OR_ASSIGN BITWISE_SHIFT_LEFT BITWISE_SHIFT_RIGHT BITWISE_XOR BITWISE_XOR_ASSIGN CHARACTER COLON COMMA COMMENT DECREMENT DIVIDE DIVIDE_ASSIGN DOT EQUALS_THEN FLOAT_NUMBER GREATER_EQUALS GREATER_THEN HEXADECIMAL_NUMBER IDENTIFIER INCREMENT KEYWORD_AUTO KEYWORD_BREAK KEYWORD_CASE KEYWORD_CONST KEYWORD_CONTINUE KEYWORD_DEFAULT KEYWORD_DO KEYWORD_ELSE KEYWORD_ENUM KEYWORD_EXTERN KEYWORD_FOR KEYWORD_GOTO KEYWORD_IF KEYWORD_REGISTER KEYWORD_RETURN KEYWORD_SIGNED KEYWORD_SIZEOF KEYWORD_STATIC KEYWORD_STRUCT KEYWORD_SWITCH KEYWORD_TYPEDEF KEYWORD_UNION KEYWORD_UNSIGNED KEYWORD_VOLATILE KEYWORD_WHILE LBRACE LBRACKET LESS_EQUALS LESS_THEN LOGICAL_AND LOGICAL_OR LPAREN MINUS MINUS_ASSIGN MODULUS MODULUS_ASSIGN MULTILINE_COMMENT NOT NOT_EQUALS NUMBER OCTAL_NUMBER PLUS PLUS_ASSIGN PRE_PROCESSOR QUESTION_MARK RBRACE RBRACKET RPAREN SEMICOLON SHIFT_LEFT_ASSIGN SHIFT_RIGHT_ASSIGN STRING TIMES TIMES_ASSIGN TYPE_CHAR TYPE_DOUBLE TYPE_FLOAT TYPE_INT TYPE_LONG TYPE_SHORT TYPE_VOID\n        program : function_declaration program\n                | function program\n                |\n    \n        function_declaration : signature SEMICOLON\n    \n        command_block : LBRACE commands RBRACE\n                        | LBRACE RBRACE\n    \n        commands : command commands\n                | command\n    \n        command : data_definition SEMICOLON\n                | while_loop\n                | assign SEMICOLON\n                | define_and_assign SEMICOLON\n                | expression SEMICOLON\n                | command_block\n                | SEMICOLON\n                | array_definition SEMICOLON\n    \n        while_signature : KEYWORD_WHILE LPAREN expression RPAREN\n    \n        while_loop : while_signature command_block\n                    | while_signature command\n    \n        assign : IDENTIFIER ASSIGN expression\n    \n        define_and_assign : type assign\n                         | pointer assign\n    \n        expression2 : LOGICAL_AND expression\n                    | LOGICAL_OR expression\n                    | PLUS expression\n                    | MINUS expression\n                    | TIMES expression\n                    | DIVIDE expression\n                    | MODULUS expression\n                    | EQUALS_THEN expression\n                    | NOT_EQUALS expression\n                    | GREATER_THEN expression\n                    | LESS_THEN expression\n                    | LESS_EQUALS expression\n                    | GREATER_EQUALS expression\n                    | LPAREN expression RPAREN\n                    | expression\n                    | IDENTIFIER\n                    | number\n                    | STRING\n                    | CHARACTER\n                    | assign\n                    | define_and_assign\n\n\n    \n        expression : expression expression2\n                    | NOT expression\n                    | expression2\n    \n        number : NUMBER\n                | FLOAT_NUMBER\n                | BINARY_NUMBER\n                | HEXADECIMAL_NUMBER\n                | OCTAL_NUMBER\n    \n        function : signature command_block\n    \n        signature : type IDENTIFIER function_parameters\n                  | pointer IDENTIFIER function_parameters\n    \n        function_parameters : LPAREN parameters_list RPAREN\n                            | LPAREN RPAREN\n    \n            parameters_list : data_definition COMMA parameters_list\n            | data_definition\n            | array_definition COMMA parameters_list\n            | array_definition\n            | array_declaration COMMA parameters_list\n            | array_declaration\n    \n        array_declaration : data_definition IDENTIFIER LBRACKET RBRACKET\n    \n        array_definition : data_definition IDENTIFIER multiple_bracket_array\n    \n        bracket_array : LBRACKET RBRACKET\n    \n        sized_bracket_array : LBRACKET IDENTIFIER RBRACKET\n                            | LBRACKET NUMBER RBRACKET\n    \n        multiple_bracket_array : multiple_bracket_array sized_bracket_array\n                                | sized_bracket_array\n    \n        data_definition : type IDENTIFIER\n                        | pointer IDENTIFIER\n    \n        type : primitive_types\n             | user_types\n    \n        primitive_types : TYPE_CHAR\n            |  TYPE_DOUBLE\n            |  TYPE_FLOAT\n            |  TYPE_INT\n            |  TYPE_LONG\n            |  TYPE_SHORT\n            |  TYPE_VOID\n    \n        user_types : IDENTIFIER\n                    | KEYWORD_STRUCT IDENTIFIER\n    \n        pointer : type TIMES multiple_pointer\n                | type TIMES\n    \n        multiple_pointer : TIMES multiple_pointer\n                         | TIMES\n    '
    
_lr_action_items = {'$end':([0,1,2,3,18,19,20,21,28,72,],[-3,0,-3,-3,-1,-2,-4,-52,-6,-5,]),'TYPE_CHAR':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,126,128,129,135,],[10,10,10,-4,-52,10,-6,10,-15,-10,-42,-43,10,-14,-38,10,-46,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-39,-40,-41,-47,-48,-49,-50,-51,10,-5,-9,-11,-12,10,-13,-44,-38,-42,-43,-16,-21,10,-22,-14,-19,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-36,10,10,10,-17,]),'TYPE_DOUBLE':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,126,128,129,135,],[11,11,11,-4,-52,11,-6,11,-15,-10,-42,-43,11,-14,-38,11,-46,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-39,-40,-41,-47,-48,-49,-50,-51,11,-5,-9,-11,-12,11,-13,-44,-38,-42,-43,-16,-21,11,-22,-14,-19,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-36,11,11,11,-17,]),'TYPE_FLOAT':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,126,128,129,135,],[12,12,12,-4,-52,12,-6,12,-15,-10,-42,-43,12,-14,-38,12,-46,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-39,-40,-41,-47,-48,-49,-50,-51,12,-5,-9,-11,-12,12,-13,-44,-38,-42,-43,-16,-21,12,-22,-14,-19,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-36,12,12,12,-17,]),'TYPE_INT':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,126,128,129,135,],[13,13,13,-4,-52,13,-6,13,-15,-10,-42,-43,13,-14,-38,13,-46,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-39,-40,-41,-47,-48,-49,-50,-51,13,-5,-9,-11,-12,13,-13,-44,-38,-42,-43,-16,-21,13,-22,-14,-19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-36,13,13,13,-17,]),'TYPE_LONG':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,126,128,129,135,],[14,14,14,-4,-52,14,-6,14,-15,-10,-42,-43,14,-14,-38,14,-46,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-39,-40,-41,-47,-48,-49,-50,-51,14,-5,-9,-11,-12,14,-13,-44,-38,-42,-43,-16,-21,14,-22,-14,-19,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-36,14,14,14,-17,]),'TYPE_SHORT':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,126,128,129,135,],[15,15,15,-4,-52,15,-6,15,-15,-10,-42,-43,15,-14,-38,15,-46,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-39,-40,-41,-47,-48,-49,-50,-51,15,-5,-9,-11,-12,15,-13,-44,-38,-42,-43,-16,-21,15,-22,-14,-19,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-36,15,15,15,-17,]),'TYPE_VOID':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,126,128,129,135,],[16,16,16,-4,-52,16,-6,16,-15,-10,-42,-43,16,-14,-38,16,-46,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-39,-40,-41,-47,-48,-49,-50,-51,16,-5,-9,-11,-12,16,-13,-44,-38,-42,-43,-16,-21,16,-22,-14,-19,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-36,16,16,16,-17,]),'IDENTIFIER':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,115,116,117,120,122,123,124,126,128,129,130,131,135,137,],[6,6,6,23,-81,25,-72,-73,-74,-75,-76,-77,-78,-79,-80,26,-4,-52,39,-84,-82,-6,39,75,-15,-10,-42,-43,81,-14,87,-38,90,39,-46,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-39,-40,-41,-47,-48,-49,-50,-51,6,-86,-83,-5,-9,-11,-12,81,-13,-44,-38,-42,-43,121,121,-16,-70,-21,81,-71,-22,-14,-19,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,127,130,131,-85,133,81,81,-36,6,6,6,-70,-71,-17,133,]),'KEYWORD_STRUCT':([0,2,3,20,21,22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,126,128,129,135,],[17,17,17,-4,-52,17,-6,17,-15,-10,-42,-43,17,-14,-38,17,-46,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-39,-40,-41,-47,-48,-49,-50,-51,17,-5,-9,-11,-12,17,-13,-44,-38,-42,-43,-16,-21,17,-22,-14,-19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-36,17,17,17,-17,]),'SEMICOLON':([4,22,28,29,30,31,32,33,34,35,36,37,39,41,42,59,60,61,62,63,64,65,66,67,71,72,74,76,77,78,79,80,81,82,83,86,87,88,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,111,118,119,122,124,125,132,135,140,141,],[20,31,-6,31,74,-15,-10,76,77,79,-14,86,-38,31,-46,-39,-40,-41,-47,-48,-49,-50,-51,-53,-54,-5,-9,-11,-12,-37,-13,-44,-38,-42,-43,-16,-70,-21,-71,-22,-14,-19,-37,-27,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-34,-35,-56,-64,-69,-20,-36,-55,-68,-17,-66,-67,]),'LBRACE':([4,22,28,29,31,32,36,41,67,71,72,74,76,77,79,86,92,93,111,125,135,],[22,22,-6,22,-15,-10,-14,22,-53,-54,-5,-9,-11,-12,-13,-16,-14,-19,-56,-55,-17,]),'TIMES':([5,6,8,9,10,11,12,13,14,15,16,22,24,26,28,29,31,32,33,34,35,36,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,72,74,76,77,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,122,123,124,135,],[24,-81,-72,-73,-74,-75,-76,-77,-78,-79,-80,44,69,-82,-6,44,-15,-10,-42,-43,44,-14,24,-38,44,-46,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-39,-40,-41,-47,-48,-49,-50,-51,69,-5,-9,-11,-12,44,-13,-44,-38,-42,-43,24,-16,-21,44,-22,-14,-19,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,24,44,44,-36,-17,]),'RBRACE':([22,27,28,29,31,32,36,72,73,74,76,77,79,86,92,93,],[28,72,-6,-8,-15,-10,-14,-5,-7,-9,-11,-12,-13,-16,-14,-19,]),'NOT':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[43,-6,43,-15,-10,-42,-43,43,-14,-38,43,-46,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,43,-13,-44,-38,-42,-43,-16,-21,43,-22,-14,-19,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-36,-17,]),'KEYWORD_WHILE':([22,28,29,31,32,36,41,72,74,76,77,79,86,92,93,135,],[45,-6,45,-15,-10,-14,45,-5,-9,-11,-12,-13,-16,-14,-19,-17,]),'LOGICAL_AND':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[47,-6,47,-15,-10,-42,-43,47,-14,-38,47,-46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,47,-13,-44,-38,-42,-43,-16,-21,47,-22,-14,-19,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-36,-17,]),'LOGICAL_OR':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[48,-6,48,-15,-10,-42,-43,48,-14,-38,48,-46,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,48,-13,-44,-38,-42,-43,-16,-21,48,-22,-14,-19,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-36,-17,]),'PLUS':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[49,-6,49,-15,-10,-42,-43,49,-14,-38,49,-46,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,49,-13,-44,-38,-42,-43,-16,-21,49,-22,-14,-19,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-36,-17,]),'MINUS':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[50,-6,50,-15,-10,-42,-43,50,-14,-38,50,-46,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,50,-13,-44,-38,-42,-43,-16,-21,50,-22,-14,-19,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-36,-17,]),'DIVIDE':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[51,-6,51,-15,-10,-42,-43,51,-14,-38,51,-46,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,51,-13,-44,-38,-42,-43,-16,-21,51,-22,-14,-19,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-36,-17,]),'MODULUS':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[52,-6,52,-15,-10,-42,-43,52,-14,-38,52,-46,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,52,-13,-44,-38,-42,-43,-16,-21,52,-22,-14,-19,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-36,-17,]),'EQUALS_THEN':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[53,-6,53,-15,-10,-42,-43,53,-14,-38,53,-46,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,53,-13,-44,-38,-42,-43,-16,-21,53,-22,-14,-19,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-36,-17,]),'NOT_EQUALS':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[54,-6,54,-15,-10,-42,-43,54,-14,-38,54,-46,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,54,-13,-44,-38,-42,-43,-16,-21,54,-22,-14,-19,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-36,-17,]),'GREATER_THEN':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[55,-6,55,-15,-10,-42,-43,55,-14,-38,55,-46,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,55,-13,-44,-38,-42,-43,-16,-21,55,-22,-14,-19,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-36,-17,]),'LESS_THEN':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[56,-6,56,-15,-10,-42,-43,56,-14,-38,56,-46,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,56,-13,-44,-38,-42,-43,-16,-21,56,-22,-14,-19,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-36,-17,]),'LESS_EQUALS':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[57,-6,57,-15,-10,-42,-43,57,-14,-38,57,-46,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,57,-13,-44,-38,-42,-43,-16,-21,57,-22,-14,-19,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-36,-17,]),'GREATER_EQUALS':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[58,-6,58,-15,-10,-42,-43,58,-14,-38,58,-46,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,58,-13,-44,-38,-42,-43,-16,-21,58,-22,-14,-19,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-36,-17,]),'LPAREN':([22,23,25,28,29,31,32,33,34,35,36,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[46,68,68,-6,46,-15,-10,-42,-43,46,-14,-38,46,-46,46,46,96,46,46,46,46,46,46,46,46,46,46,46,46,46,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,46,-13,-44,-38,-42,-43,-16,-21,46,-22,-14,-19,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-36,-17,]),'STRING':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[60,-6,60,-15,-10,-42,-43,60,-14,-38,60,-46,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,60,-13,-44,-38,-42,-43,-16,-21,60,-22,-14,-19,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-36,-17,]),'CHARACTER':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[61,-6,61,-15,-10,-42,-43,61,-14,-38,61,-46,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,61,-13,-44,-38,-42,-43,-16,-21,61,-22,-14,-19,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-36,-17,]),'NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,120,122,123,124,135,137,],[62,-6,62,-15,-10,-42,-43,62,-14,-38,62,-46,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,62,-13,-44,-38,-42,-43,-16,-21,62,-22,-14,-19,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,134,62,62,-36,-17,134,]),'FLOAT_NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[63,-6,63,-15,-10,-42,-43,63,-14,-38,63,-46,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,63,-13,-44,-38,-42,-43,-16,-21,63,-22,-14,-19,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-36,-17,]),'BINARY_NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[64,-6,64,-15,-10,-42,-43,64,-14,-38,64,-46,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,64,-13,-44,-38,-42,-43,-16,-21,64,-22,-14,-19,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-36,-17,]),'HEXADECIMAL_NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[65,-6,65,-15,-10,-42,-43,65,-14,-38,65,-46,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,65,-13,-44,-38,-42,-43,-16,-21,65,-22,-14,-19,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-36,-17,]),'OCTAL_NUMBER':([22,28,29,31,32,33,34,35,36,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,76,77,78,79,80,81,82,83,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,124,135,],[66,-6,66,-15,-10,-42,-43,66,-14,-38,66,-46,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-39,-40,-41,-47,-48,-49,-50,-51,-5,-9,-11,-12,66,-13,-44,-38,-42,-43,-16,-21,66,-22,-14,-19,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-36,-17,]),'ASSIGN':([39,81,87,90,121,],[89,89,89,89,89,]),'RPAREN':([42,59,60,61,62,63,64,65,66,68,78,80,81,82,83,88,91,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,118,119,122,123,124,130,131,132,136,138,139,140,141,142,],[-46,-39,-40,-41,-47,-48,-49,-50,-51,111,-37,-44,-38,-42,-43,-21,-22,-37,-27,124,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-34,-35,125,-58,-60,-62,-64,-69,-20,135,-36,-70,-71,-68,-57,-59,-61,-66,-67,-63,]),'LBRACKET':([75,118,119,127,132,140,141,],[120,120,-69,137,-68,-66,-67,]),'COMMA':([112,113,114,118,119,130,131,132,140,141,142,],[126,128,129,-64,-69,-70,-71,-68,-66,-67,-63,]),'RBRACKET':([133,134,137,],[140,141,142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,18,19,]),'function_declaration':([0,2,3,],[2,2,2,]),'function':([0,2,3,],[3,3,3,]),'signature':([0,2,3,],[4,4,4,]),'type':([0,2,3,22,29,35,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,68,78,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,126,128,129,],[5,5,5,38,38,84,38,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,115,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,115,115,115,]),'pointer':([0,2,3,22,29,35,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,68,78,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,126,128,129,],[7,7,7,40,40,85,40,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,116,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,116,116,116,]),'primitive_types':([0,2,3,22,29,35,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,68,78,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,126,128,129,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'user_types':([0,2,3,22,29,35,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,68,78,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,126,128,129,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'command_block':([4,22,29,41,],[21,36,36,92,]),'commands':([22,29,],[27,73,]),'command':([22,29,41,],[29,29,93,]),'data_definition':([22,29,41,68,126,128,129,],[30,30,30,112,112,112,112,]),'while_loop':([22,29,41,],[32,32,32,]),'assign':([22,29,35,38,40,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,78,84,85,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,],[33,33,82,88,91,33,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,88,91,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'define_and_assign':([22,29,35,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,78,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,],[34,34,83,34,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'expression':([22,29,35,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,78,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,],[35,35,78,35,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,78,122,78,78,123,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'array_definition':([22,29,41,68,126,128,129,],[37,37,37,113,113,113,113,]),'while_signature':([22,29,41,],[41,41,41,]),'expression2':([22,29,35,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,78,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,],[42,42,80,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,80,42,80,80,42,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'number':([22,29,35,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,78,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,123,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'function_parameters':([23,25,],[67,71,]),'multiple_pointer':([24,69,],[70,117,]),'parameters_list':([68,126,128,129,],[110,136,138,139,]),'array_declaration':([68,126,128,129,],[114,114,114,114,]),'multiple_bracket_array':([75,127,],[118,118,]),'sized_bracket_array':([75,118,127,],[119,132,119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_declaration program','program',2,'p_program','sintatic.py',7),
  ('program -> function program','program',2,'p_program','sintatic.py',8),
  ('program -> <empty>','program',0,'p_program','sintatic.py',9),
  ('function_declaration -> signature SEMICOLON','function_declaration',2,'p_function_declaration','sintatic.py',15),
  ('command_block -> LBRACE commands RBRACE','command_block',3,'p_command_block','sintatic.py',21),
  ('command_block -> LBRACE RBRACE','command_block',2,'p_command_block','sintatic.py',22),
  ('commands -> command commands','commands',2,'p_commands','sintatic.py',28),
  ('commands -> command','commands',1,'p_commands','sintatic.py',29),
  ('command -> data_definition SEMICOLON','command',2,'p_command','sintatic.py',35),
  ('command -> while_loop','command',1,'p_command','sintatic.py',36),
  ('command -> assign SEMICOLON','command',2,'p_command','sintatic.py',37),
  ('command -> define_and_assign SEMICOLON','command',2,'p_command','sintatic.py',38),
  ('command -> expression SEMICOLON','command',2,'p_command','sintatic.py',39),
  ('command -> command_block','command',1,'p_command','sintatic.py',40),
  ('command -> SEMICOLON','command',1,'p_command','sintatic.py',41),
  ('command -> array_definition SEMICOLON','command',2,'p_command','sintatic.py',42),
  ('while_signature -> KEYWORD_WHILE LPAREN expression RPAREN','while_signature',4,'p_while_signature','sintatic.py',48),
  ('while_loop -> while_signature command_block','while_loop',2,'p_while_loop','sintatic.py',54),
  ('while_loop -> while_signature command','while_loop',2,'p_while_loop','sintatic.py',55),
  ('assign -> IDENTIFIER ASSIGN expression','assign',3,'p_assign','sintatic.py',74),
  ('define_and_assign -> type assign','define_and_assign',2,'p_define_and_assign','sintatic.py',80),
  ('define_and_assign -> pointer assign','define_and_assign',2,'p_define_and_assign','sintatic.py',81),
  ('expression2 -> LOGICAL_AND expression','expression2',2,'p_expression2','sintatic.py',87),
  ('expression2 -> LOGICAL_OR expression','expression2',2,'p_expression2','sintatic.py',88),
  ('expression2 -> PLUS expression','expression2',2,'p_expression2','sintatic.py',89),
  ('expression2 -> MINUS expression','expression2',2,'p_expression2','sintatic.py',90),
  ('expression2 -> TIMES expression','expression2',2,'p_expression2','sintatic.py',91),
  ('expression2 -> DIVIDE expression','expression2',2,'p_expression2','sintatic.py',92),
  ('expression2 -> MODULUS expression','expression2',2,'p_expression2','sintatic.py',93),
  ('expression2 -> EQUALS_THEN expression','expression2',2,'p_expression2','sintatic.py',94),
  ('expression2 -> NOT_EQUALS expression','expression2',2,'p_expression2','sintatic.py',95),
  ('expression2 -> GREATER_THEN expression','expression2',2,'p_expression2','sintatic.py',96),
  ('expression2 -> LESS_THEN expression','expression2',2,'p_expression2','sintatic.py',97),
  ('expression2 -> LESS_EQUALS expression','expression2',2,'p_expression2','sintatic.py',98),
  ('expression2 -> GREATER_EQUALS expression','expression2',2,'p_expression2','sintatic.py',99),
  ('expression2 -> LPAREN expression RPAREN','expression2',3,'p_expression2','sintatic.py',100),
  ('expression2 -> expression','expression2',1,'p_expression2','sintatic.py',101),
  ('expression2 -> IDENTIFIER','expression2',1,'p_expression2','sintatic.py',102),
  ('expression2 -> number','expression2',1,'p_expression2','sintatic.py',103),
  ('expression2 -> STRING','expression2',1,'p_expression2','sintatic.py',104),
  ('expression2 -> CHARACTER','expression2',1,'p_expression2','sintatic.py',105),
  ('expression2 -> assign','expression2',1,'p_expression2','sintatic.py',106),
  ('expression2 -> define_and_assign','expression2',1,'p_expression2','sintatic.py',107),
  ('expression -> expression expression2','expression',2,'p_expression','sintatic.py',115),
  ('expression -> NOT expression','expression',2,'p_expression','sintatic.py',116),
  ('expression -> expression2','expression',1,'p_expression','sintatic.py',117),
  ('number -> NUMBER','number',1,'p_number','sintatic.py',123),
  ('number -> FLOAT_NUMBER','number',1,'p_number','sintatic.py',124),
  ('number -> BINARY_NUMBER','number',1,'p_number','sintatic.py',125),
  ('number -> HEXADECIMAL_NUMBER','number',1,'p_number','sintatic.py',126),
  ('number -> OCTAL_NUMBER','number',1,'p_number','sintatic.py',127),
  ('function -> signature command_block','function',2,'p_function','sintatic.py',133),
  ('signature -> type IDENTIFIER function_parameters','signature',3,'p_signature','sintatic.py',139),
  ('signature -> pointer IDENTIFIER function_parameters','signature',3,'p_signature','sintatic.py',140),
  ('function_parameters -> LPAREN parameters_list RPAREN','function_parameters',3,'p_function_parameters','sintatic.py',146),
  ('function_parameters -> LPAREN RPAREN','function_parameters',2,'p_function_parameters','sintatic.py',147),
  ('parameters_list -> data_definition COMMA parameters_list','parameters_list',3,'p_parameters_list','sintatic.py',153),
  ('parameters_list -> data_definition','parameters_list',1,'p_parameters_list','sintatic.py',154),
  ('parameters_list -> array_definition COMMA parameters_list','parameters_list',3,'p_parameters_list','sintatic.py',155),
  ('parameters_list -> array_definition','parameters_list',1,'p_parameters_list','sintatic.py',156),
  ('parameters_list -> array_declaration COMMA parameters_list','parameters_list',3,'p_parameters_list','sintatic.py',157),
  ('parameters_list -> array_declaration','parameters_list',1,'p_parameters_list','sintatic.py',158),
  ('array_declaration -> data_definition IDENTIFIER LBRACKET RBRACKET','array_declaration',4,'p_array_declaration','sintatic.py',164),
  ('array_definition -> data_definition IDENTIFIER multiple_bracket_array','array_definition',3,'p_array_definition','sintatic.py',170),
  ('bracket_array -> LBRACKET RBRACKET','bracket_array',2,'p_bracket_array','sintatic.py',176),
  ('sized_bracket_array -> LBRACKET IDENTIFIER RBRACKET','sized_bracket_array',3,'p_sized_bracket_array','sintatic.py',182),
  ('sized_bracket_array -> LBRACKET NUMBER RBRACKET','sized_bracket_array',3,'p_sized_bracket_array','sintatic.py',183),
  ('multiple_bracket_array -> multiple_bracket_array sized_bracket_array','multiple_bracket_array',2,'p_multiple_bracket_array','sintatic.py',189),
  ('multiple_bracket_array -> sized_bracket_array','multiple_bracket_array',1,'p_multiple_bracket_array','sintatic.py',190),
  ('data_definition -> type IDENTIFIER','data_definition',2,'p_data_definition','sintatic.py',197),
  ('data_definition -> pointer IDENTIFIER','data_definition',2,'p_data_definition','sintatic.py',198),
  ('type -> primitive_types','type',1,'p_type','sintatic.py',204),
  ('type -> user_types','type',1,'p_type','sintatic.py',205),
  ('primitive_types -> TYPE_CHAR','primitive_types',1,'p_primitive_types','sintatic.py',211),
  ('primitive_types -> TYPE_DOUBLE','primitive_types',1,'p_primitive_types','sintatic.py',212),
  ('primitive_types -> TYPE_FLOAT','primitive_types',1,'p_primitive_types','sintatic.py',213),
  ('primitive_types -> TYPE_INT','primitive_types',1,'p_primitive_types','sintatic.py',214),
  ('primitive_types -> TYPE_LONG','primitive_types',1,'p_primitive_types','sintatic.py',215),
  ('primitive_types -> TYPE_SHORT','primitive_types',1,'p_primitive_types','sintatic.py',216),
  ('primitive_types -> TYPE_VOID','primitive_types',1,'p_primitive_types','sintatic.py',217),
  ('user_types -> IDENTIFIER','user_types',1,'p_user_types','sintatic.py',223),
  ('user_types -> KEYWORD_STRUCT IDENTIFIER','user_types',2,'p_user_types','sintatic.py',224),
  ('pointer -> type TIMES multiple_pointer','pointer',3,'p_pointer','sintatic.py',230),
  ('pointer -> type TIMES','pointer',2,'p_pointer','sintatic.py',231),
  ('multiple_pointer -> TIMES multiple_pointer','multiple_pointer',2,'p_multiple_pointer','sintatic.py',237),
  ('multiple_pointer -> TIMES','multiple_pointer',1,'p_multiple_pointer','sintatic.py',238),
]
